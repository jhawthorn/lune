local compile = require('lune.compile')

describe("Compiler", function()
  it("can compile number", function()
    local lua = compile({{"number", "42"}})
    assert.are.equal("42", lua)
  end)

  it("can compile function", function()
    local lua = compile({{"func", {"number", "123"}}})
    assert.are.same("function()\nreturn 123\nend\n", lua)
  end)

  describe("function call", function()
    it("can compile with no arguments", function()
      local lua = compile({{"call", {"identifier", "print"}}})
      assert.are.same("print()", lua)
    end)

    it("can compile with one argument", function()
      local lua = compile({{"call", {"identifier", "print"}, {"number", "123"}}})
      assert.are.same("print(123)", lua)
    end)

    it("can compile with two arguments", function()
      local lua = compile({{"call", {"identifier", "print"}, {"number", "123"}, {"number", "456"}}})
      assert.are.same("print(123,456)", lua)
    end)
  end)
end)
